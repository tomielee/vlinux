### SED

print only matched lines
    -n

aktiverar utökad regex och inkluderar {}  
    -E

OBS!
p = patternspace.

    sed -n -E 's/([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(.*)/\1/p' "$MINI" > $IP
    if used -n and no p it wont print anything.



# # # # # # # # # # # BASH AND SED 
    local regex_ip="([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})"
    local regex_all="(.*)"
    local regex_url="((https?)+(\:\/\/)+([A-Za-z0-9_~]+\.)+([A-Za-z0-9_~]+(\.|\/){1,4}))"
    # (https?)                    # http and https
    # (\:\/\/)                      #://
    # ([A-Za-z0-9_~]+\.)        # dbwebb AND www.
    # ([A-Za-z0-9_~]+(\.|\/){1,3}) #Any ab12.Bn3/HJ54 OR ab12/Bn3.lk


    json=$( cat "$LOG" | sed -nE  \
        -e 's/'"$regex_ip"'.*'"$regex_url"'.*/{|  "ip": "\1",|  "url": "\2"|},/p' \
        -e '$ s/,$//p' \
        | tr '|' '\n' \
        )

            1. read file $LOG 
                | AND
                use sed, -n only matched lines, -E escapes special chars such as {}
            2.  -e                  >> defines new sed command
                's/FIND/REPLACE/p'  >> sed switch with groups and json needed {} and ,
            3.  -e 
                '$ s/,$//p' \       >> Remove last comma
            4.  |                   >> AND 
                 tr '|' '\n' \      >> Define | as \n >> obs! only beacuase it would read \n



# # # # # # ## # # # # # # SERVER
build the server and client from bthloggen/
    sudo docker build --rm -t jeneljenel/vlinux-kmom10:server server/
    sudo docker build --rm -t jeneljenel/vlinux-kmom10:client client/


# # # # RUN YML
Run server detached
    $ docker-compose up -d server
Run client
    $ docker-compose run client
Stäng ner
    $ docker-compose down


build the images with dev.bash. or
sudo docker build --rm -t jeneljenel/vlinux-kmom10:server server/
sudo docker build --rm -t jeneljenel/vlinux-kmom10:client client/

create network
    1. sudo docker network create dbwebb

run the server same as sudo docker sudo docker run --rm -d -p 8080:1337 --name myserver --net dbwebb jeneljenel/vlinux-kmom10:server
    2. sudo docker-compose run -d server 

run the client  sudo docker run -it --rm  --name myclient --net dbwebb jeneljenel/vlinux-kmom10:client
    3. sudo docker-compose run client 



MISCS MISCS MISCS
### NOTES and old code
// works with ip and url only
// onlyunique works.
// function onlyUnique(value, index, self) {
//     return self.indexOf(value) === index;
// }
// if (req.query.ip) {
//     urlInput = req.query.ip;
//     for (let i = 0; i < api.length; i++) {
//         let reg = new RegExp(urlInput, "g")

//         if (api[i].ip.match(reg)) {
//             allres.push(api[i].url)
//         }

//         content = allres.filter(onlyUnique);
//     }
// } else if (req.query.url) {
//     urlInput = req.query.url;

//     for (let i = 0; i < api.length; i++) {
//         let reg = new RegExp(urlInput, "g")

//         if (api[i].url.match(reg)) {
//             allres.push(api[i].ip)
//         }
//         content = allres.filter(onlyUnique);
//     }
// } else if (req.query.day) {
//     urlInput = req.query.day;

//     for (let i = 0; i < api.length; i++) {
//         let reg = new RegExp(urlInput, "g")

//         if (api[i].day.match(reg)) {
//             allres.push(api[i])
//         }
//         content = allres.filter(onlyUnique);
//     }
// } 
// else {
//     content = api;
// }